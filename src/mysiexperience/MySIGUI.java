/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package mysiexperience;

import java.awt.Color;
import java.io.BufferedReader;
import java.io.File;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import mysiexperience.ChromeDriverUpdater;
import mysiexperience.SchedulePWSL;

/**
 *
 * @author z004kptc
 */
public class MySIGUI extends javax.swing.JFrame {
    private static final String DEFAULT_SAVE_FOLDER = System.getProperty("user.home") + File.separator + "Documents" + File.separator + "MySIExperience" + File.separator + "PWSL_Templates";
    
    /**
     * Creates new form MySIGUI
     */
    public MySIGUI() {
        initComponents();
        createDefaultFolder();
        appInfo();
        chromeUpdate();
        txfAppV.setText("1.0 (Beta)");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlMain = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        btnPWSL = new javax.swing.JButton();
        btnSettings = new javax.swing.JButton();
        btnFeedback = new javax.swing.JButton();
        btnSchedule = new javax.swing.JButton();
        btnDaily = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        txfChromeDriverV = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txfJavaV = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txfAppV = new javax.swing.JTextField();
        txfUpdateReq = new javax.swing.JTextField();
        btnUpdate = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jmuFile = new javax.swing.JMenu();
        mniSave = new javax.swing.JMenuItem();
        mniLoad = new javax.swing.JMenuItem();
        jmuConfig = new javax.swing.JMenu();
        mniPWSL = new javax.swing.JMenuItem();
        mniWFS = new javax.swing.JMenuItem();
        mniUserData = new javax.swing.JMenuItem();
        jmuHistory = new javax.swing.JMenu();
        mniJobsRecords = new javax.swing.JMenuItem();
        mniPWSLRecords = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("My SI Service Portal");

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("My Siemens Service Technician Portal");

        btnPWSL.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnPWSL.setText("PWSL");
        btnPWSL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPWSLActionPerformed(evt);
            }
        });

        btnSettings.setText("Settings");
        btnSettings.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSettingsActionPerformed(evt);
            }
        });

        btnFeedback.setText("Feedback");
        btnFeedback.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFeedbackActionPerformed(evt);
            }
        });

        btnSchedule.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnSchedule.setText("Schedule PWSL");
        btnSchedule.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnScheduleActionPerformed(evt);
            }
        });

        btnDaily.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnDaily.setText("Run Daily Tasks");
        btnDaily.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDailyActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlMainLayout = new javax.swing.GroupLayout(pnlMain);
        pnlMain.setLayout(pnlMainLayout);
        pnlMainLayout.setHorizontalGroup(
            pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMainLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(btnDaily, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnPWSL, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 206, Short.MAX_VALUE)
                        .addComponent(btnSchedule, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(btnSettings, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnFeedback, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlMainLayout.setVerticalGroup(
            pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMainLayout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnPWSL, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSchedule, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnDaily, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnSettings)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnFeedback)
                .addContainerGap())
        );

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel2.setText("ChromeDriver Version:");
        jLabel2.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);

        txfChromeDriverV.setForeground(new java.awt.Color(102, 102, 102));
        txfChromeDriverV.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        txfChromeDriverV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txfChromeDriverVActionPerformed(evt);
            }
        });

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel3.setText("Java Version:");
        jLabel3.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jLabel3.setRequestFocusEnabled(false);

        txfJavaV.setForeground(new java.awt.Color(102, 102, 102));
        txfJavaV.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel4.setText("App Version:");
        jLabel4.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);

        txfAppV.setForeground(new java.awt.Color(102, 102, 102));
        txfAppV.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        txfUpdateReq.setForeground(new java.awt.Color(102, 102, 102));
        txfUpdateReq.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        txfUpdateReq.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txfUpdateReqActionPerformed(evt);
            }
        });

        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        jmuFile.setText("File");

        mniSave.setText("Save");
        mniSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniSaveActionPerformed(evt);
            }
        });
        jmuFile.add(mniSave);

        mniLoad.setText("Load");
        mniLoad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniLoadActionPerformed(evt);
            }
        });
        jmuFile.add(mniLoad);

        jMenuBar1.add(jmuFile);

        jmuConfig.setText("Configuration");

        mniPWSL.setText("PWSL");
        jmuConfig.add(mniPWSL);

        mniWFS.setText("WFS");
        jmuConfig.add(mniWFS);

        mniUserData.setText("User Data");
        mniUserData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniUserDataActionPerformed(evt);
            }
        });
        jmuConfig.add(mniUserData);

        jMenuBar1.add(jmuConfig);

        jmuHistory.setText("History");

        mniJobsRecords.setText("Jobs Records");
        mniJobsRecords.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniJobsRecordsActionPerformed(evt);
            }
        });
        jmuHistory.add(mniJobsRecords);

        mniPWSLRecords.setText("PWSL Records");
        mniPWSLRecords.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniPWSLRecordsActionPerformed(evt);
            }
        });
        jmuHistory.add(mniPWSLRecords);

        jMenuBar1.add(jmuHistory);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(54, 54, 54)
                        .addComponent(pnlMain, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 58, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(txfUpdateReq)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnUpdate))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txfChromeDriverV))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txfJavaV))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txfAppV)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlMain, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txfAppV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txfJavaV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txfChromeDriverV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txfUpdateReq, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnUpdate))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSettingsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSettingsActionPerformed
        Settings settingsInstance = new Settings ();
        settingsInstance.setVisible(true);
    }//GEN-LAST:event_btnSettingsActionPerformed

    private void btnPWSLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPWSLActionPerformed
        PWSL pwslInstance = new PWSL ();
        pwslInstance.setVisible(true);
    }//GEN-LAST:event_btnPWSLActionPerformed

    private void mniPWSLRecordsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniPWSLRecordsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_mniPWSLRecordsActionPerformed

    private void mniJobsRecordsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniJobsRecordsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_mniJobsRecordsActionPerformed

    private void mniUserDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniUserDataActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_mniUserDataActionPerformed

    private void mniLoadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniLoadActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_mniLoadActionPerformed

    private void mniSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniSaveActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_mniSaveActionPerformed

    private void btnFeedbackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFeedbackActionPerformed
        Feedback feedbackInstance = new Feedback ();
        feedbackInstance.setVisible(true);
    }//GEN-LAST:event_btnFeedbackActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
         ChromeDriverUpdater.main(null);
         appInfo();
        
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void txfChromeDriverVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txfChromeDriverVActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txfChromeDriverVActionPerformed

    private void txfUpdateReqActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txfUpdateReqActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txfUpdateReqActionPerformed

    private void btnScheduleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnScheduleActionPerformed
        // TODO add your handling code here:
        SchedulePWSL.main(null);
    }//GEN-LAST:event_btnScheduleActionPerformed

    private void btnDailyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDailyActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnDailyActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MySIGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MySIGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MySIGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MySIGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MySIGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDaily;
    private javax.swing.JButton btnFeedback;
    private javax.swing.JButton btnPWSL;
    private javax.swing.JButton btnSchedule;
    private javax.swing.JButton btnSettings;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JMenu jmuConfig;
    private javax.swing.JMenu jmuFile;
    private javax.swing.JMenu jmuHistory;
    private javax.swing.JMenuItem mniJobsRecords;
    private javax.swing.JMenuItem mniLoad;
    private javax.swing.JMenuItem mniPWSL;
    private javax.swing.JMenuItem mniPWSLRecords;
    private javax.swing.JMenuItem mniSave;
    private javax.swing.JMenuItem mniUserData;
    private javax.swing.JMenuItem mniWFS;
    private javax.swing.JPanel pnlMain;
    private javax.swing.JTextField txfAppV;
    private javax.swing.JTextField txfChromeDriverV;
    private javax.swing.JTextField txfJavaV;
    private javax.swing.JTextField txfUpdateReq;
    // End of variables declaration//GEN-END:variables

    private void createDefaultFolder() {
        File folder = new File(DEFAULT_SAVE_FOLDER);
        if (!folder.exists()) {
            if (folder.mkdirs()) {
                System.out.println("Default folder created: " + DEFAULT_SAVE_FOLDER);
            } else {
                System.err.println("Failed to create default folder: " + DEFAULT_SAVE_FOLDER);
            }
        }
    }

    private void appInfo() {
    //Java Version
        String javaVersion = System.getProperty("java.version");
        txfJavaV.setText(javaVersion);
            //ChromeDriver Version
        try {
            Process process = Runtime.getRuntime().exec("C:\\Users\\z004kptc\\Documents\\MySIExperience\\Configuration\\Chrome Webdriver\\chromedriver-win64\\chromedriver.exe --version");
            InputStream inputStream = process.getInputStream();
            BufferedReader reader = new BufferedReader(new InputStreamReader(inputStream));
            
            String versionInfo = reader.readLine();  // Reading the version output
            String versionNumber = extractVersion(versionInfo);
           txfChromeDriverV.setText(versionNumber);
           reader.close();
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    private String extractVersion(String fullVersionString) {
    if (fullVersionString != null && !fullVersionString.isEmpty()) {
        return fullVersionString.split(" ") [1];
        
    }    
    return "Unknown Version";
    }

    private void chromeUpdate() {
    ChromeDriverUpdater updater = new ChromeDriverUpdater();
    updater.fetchChromeJson();
    updater.checkChromeJson();

    String latestChromeDriverVersion = updater.versionNew;
    String installedChromeDriverVersion = txfChromeDriverV.getText();

    // Compare versions
    if (latestChromeDriverVersion.equals(installedChromeDriverVersion)) {
        // Versions are the same
        txfChromeDriverV.setForeground(Color.BLACK); // Set text color to black
        btnUpdate.setBackground(Color.WHITE); // Set button background to default
    } else {
        // Versions are different
        txfChromeDriverV.setForeground(Color.RED); // Set text color to red
        btnUpdate.setBackground(Color.GREEN); // Set button background to green
        txfUpdateReq.setText("Update is required!");
    }
    }
    
    
}

